plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'org.project'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}
dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    implementation('org.springframework.boot:spring-boot-starter-web-services') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
//  testImplementation 'org.springframework.security:spring-security-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//  developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MySQL
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // REST Docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Crawling - Selenium
    implementation 'org.seleniumhq.selenium:selenium-java:4.12.1'

    // ChatGPT
    implementation 'com.fasterxml.jackson.core:jackson-databind'

}

ext {
    snippetsDir = file("build/generated-snippets")
}


tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
    finalizedBy(tasks.named('asciidoctor'))
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    attributes 'snippets': snippetsDir
    dependsOn tasks.named('test')
    finalizedBy(tasks.named('copyDocs'))
}

tasks.register('copyDocs', Copy) {
    from(layout.buildDirectory.dir("docs/asciidoc"))
    into("${projectDir}/src/main/resources/static/docs")
}

tasks.build {
    dependsOn asciidoctor
}